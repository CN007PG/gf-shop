// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ItemDao is the user access object for table item.
type ItemDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns ItemColumns // columns contains all the column names of Table for convenient usage.
}

// ItemColumns defines and stores column names for table item.
type ItemColumns struct {
	Id        string // 商品id,商品编号
	Title     string // 商品标题
	SellPoint string // 商品卖点
	Price     string // 商品价格单位元
	Num       string // 库存数量
	Barcode   string // 商品条形码
	Image     string // 商品图片
	Cid       string // 商品类目
	Status    string // 商品状态 1-正常销售，2-停售
	CreateAt  string // 创建时间
	UpdateAt  string // 更新时间
}

// itemColumns holds the columns for table item.
var itemColumns = ItemColumns{
	Id:        "id",
	Title:     "title",
	SellPoint: "sell_point",
	Price:     "price",
	Num:       "num",
	Barcode:   "barcode",
	Image:     "image",
	Cid:       "cid",
	Status:    "status",
	CreateAt:  "create_at",
	UpdateAt:  "update_at",
}

// NewItemDao creates and returns a new DAO object for table user access.
func NewItemDao() *ItemDao {
	return &ItemDao{
		group:   "default",
		table:   "item",
		columns: itemColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ItemDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ItemDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ItemDao) Columns() ItemColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ItemDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ItemDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ItemDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
