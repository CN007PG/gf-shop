// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ItemCatDao is the user access object for table item_cat.
type ItemCatDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns ItemCatColumns // columns contains all the column names of Table for convenient usage.
}

// ItemCatColumns defines and stores column names for table item_cat.
type ItemCatColumns struct {
	Id        string //
	ParentId  string // 父类目id
	Name      string // 类目名称
	Status    string // 状态 1-正常销售，2-停售
	SortOrder string // 排序号
	IsParent  string // 是否为父类目
	CreateAt  string // 创建时间
	UpdateAt  string // 更新时间
}

// itemCatColumns holds the columns for table item_cat.
var itemCatColumns = ItemCatColumns{
	Id:        "id",
	ParentId:  "parent_id",
	Name:      "name",
	Status:    "status",
	SortOrder: "sort_order",
	IsParent:  "is_parent",
	CreateAt:  "create_at",
	UpdateAt:  "update_at",
}

// NewItemCatDao creates and returns a new DAO object for table user access.
func NewItemCatDao() *ItemCatDao {
	return &ItemCatDao{
		group:   "default",
		table:   "item_cat",
		columns: itemCatColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ItemCatDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ItemCatDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ItemCatDao) Columns() ItemCatColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ItemCatDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ItemCatDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ItemCatDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
